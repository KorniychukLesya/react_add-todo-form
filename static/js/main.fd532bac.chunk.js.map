{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","React","useState","setTodo","newTitle","setTitle","newName","setName","switchClick","setSwitchClick","newUserId","setUserId","onSubmit","event","preventDefault","trim","prev","createNewId","reduce","a","b","Math","max","action","method","type","placeholder","value","onChange","target","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd532bac.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../type/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../type/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} /> }\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {(todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    )))}\n  </section>\n);\n","import './App.scss';\nimport React from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { User } from './type/User';\nimport { Todo } from './type/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todo, setTodo] = React.useState([...todos]);\n  const [newTitle, setTitle] = React.useState('');\n  const [newName, setName] = React.useState('');\n  const [switchClick, setSwitchClick] = React.useState(false);\n  const [newUserId, setUserId] = React.useState(0);\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (newTitle.trim() !== '' && newName !== '') {\n      setTodo((prev) => {\n        const createNewId = prev\n          .map(({ id }) => id)\n          .reduce((a: number, b: number) => Math.max(a, b), 0) + 1;\n\n        return [\n          ...prev,\n          {\n            id: createNewId,\n            userId: newUserId,\n            title: newTitle,\n            completed: false,\n            user: getUser(newUserId),\n          },\n        ];\n      });\n\n      setSwitchClick(false);\n      setTitle('');\n      setName('');\n      setUserId(0);\n    } else {\n      setSwitchClick(true);\n    }\n  };\n\n  const handleChangeTitle = (\n    event: { target: { value: React.SetStateAction<string> } },\n  ) => {\n    setTitle(event.target.value);\n  };\n\n  const handleChangeName = (\n    event: { target: { value: React.SetStateAction<string> } },\n  ) => {\n    setName(event.target.value);\n    setUserId(Number(usersFromServer\n      .find(user => user.name === event.target.value)?.id));\n  };\n\n  return (\n\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={handleChangeTitle}\n\n          />\n          {(newTitle.trim() === '' && switchClick)\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={newName}\n            onChange={handleChangeName}\n\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id}>\n                {name}\n              </option>\n            ))}\n\n          </select>\n\n          {(newName === '' && switchClick)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}