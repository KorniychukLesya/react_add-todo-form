{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","todosFromServer","usersFromServer","find","App","React","useState","setTodo","newTitle","setTitle","newName","setName","switchClick","setSwitchClick","onSubmit","event","preventDefault","prev","reduce","a","b","Math","max","Number","action","method","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8791c49f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../type/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../type/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} /> }\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {(todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    )))}\n  </section>\n);\n","import './App.scss';\nimport React from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { User } from './type/User';\nimport { Todo } from './type/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todo, setTodo] = React.useState([...todos]);\n  const [newTitle, setTitle] = React.useState('');\n  const [newName, setName] = React.useState('');\n  const [switchClick, setSwitchClick] = React.useState(false);\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (newTitle !== '' && newName !== '') {\n      setTodo((prev) => {\n        return [\n          ...prev,\n          {\n            id: prev\n              .map(({ id }) => id)\n              .reduce((a, b) => Math.max(a, b), 0) + 1,\n            userId: Number(todosFromServer.find(user => user.userId)),\n            title: newTitle,\n            completed: false,\n            user: usersFromServer.find(user => user.name === newName) || null,\n          },\n        ];\n      });\n\n      setSwitchClick(false);\n      setTitle('');\n      setName('');\n    } else {\n      setSwitchClick(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n\n          />\n          {(newTitle === '' && switchClick)\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={newName}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id}>\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n\n          {(newName === '' && switchClick)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todo} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}